/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.8.2'

    // Guava
    implementation 'com.google.guava:guava:31.1-jre'

    // Use LWJGL for OpenGL rendering.
    implementation 'org.lwjgl:lwjgl:3.3.1'
    implementation 'org.lwjgl:lwjgl-glfw:3.3.1'
    implementation 'org.lwjgl:lwjgl-opengl:3.3.1'
    implementation 'org.lwjgl:lwjgl-stb:3.3.1'

    runtimeOnly 'org.lwjgl:lwjgl:3.2.3:natives-windows'  // For Windows native libraries
    runtimeOnly 'org.lwjgl:lwjgl-opengl:3.2.3:natives-windows'  // OpenGL
    runtimeOnly 'org.lwjgl:lwjgl-glfw:3.2.3:natives-windows'  // GLFW
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'knitpix.app.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
